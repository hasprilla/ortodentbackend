# <IfModule mod_rewrite.c>
#     <IfModule mod_negotiation.c>
#         Options -MultiViews -Indexes
#     </IfModule>

#     RewriteEngine On

#     ### SOLUCIÓN AL ERROR 422 (Unprocessable Entity) ###
#     # Asegura que las solicitudes POST/PUT con JSON sean procesadas correctamente
#     RewriteCond %{REQUEST_METHOD} ^(POST|PUT|PATCH)
#     RewriteCond %{CONTENT_TYPE} !^application/json [NC]
#     RewriteRule .* - [R=422,L]

#     ### Manejo de rutas y protección ###
#     RewriteCond %{REQUEST_FILENAME} !-d
#     RewriteCond %{REQUEST_FILENAME} !-f
#     RewriteRule ^ index.php [L]

#     ### Configuración para API REST (Authorization Header) ###
#     RewriteCond %{HTTP:Authorization} ^(.*)
#     RewriteRule .* - [E=HTTP_AUTHORIZATION:%1]

#     ### Protección contra inyecciones ###
#     RewriteCond %{QUERY_STRING} (\<|%3C).*script.*(\>|%3E) [NC,OR]
#     RewriteCond %{QUERY_STRING} GLOBALS(=|\[|\%[0-9A-Z]{0,2}) [OR]
#     RewriteCond %{QUERY_STRING} _REQUEST(=|\[|\%[0-9A-Z]{0,2})
#     RewriteRule ^(.*)$ - [F,L]
# </IfModule>

# ### Bloqueo de archivos sensibles ###
# <FilesMatch "\.(env|log|sql|htaccess|htpasswd|ini|phps|fla|psd|bak|swp|gitignore|gitattributes|lock)$">
#     Order allow,deny
#     Deny from all
# </FilesMatch>

# <FilesMatch "^(artisan|composer\.json|composer\.lock|package\.json|web\.config)$">
#     Order allow,deny
#     Deny from all
# </FilesMatch>

# ### Headers de Seguridad (10/10) ###
# <IfModule mod_headers.c>
#     # Headers básicos
#     Header set X-Content-Type-Options "nosniff"
#     Header set X-Frame-Options "DENY"
#     Header set X-XSS-Protection "1; mode=block"
#     Header set Referrer-Policy "strict-origin-when-cross-origin"
#     Header set Permissions-Policy "geolocation=(), microphone=(), camera=()"
#     Header set Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self'; frame-ancestors 'none'; form-action 'self';"

#     # CORS estricto (ajusta los dominios)
#     SetEnvIf Origin "^https://(dominio1\.com|dominio2\.com|localhost)(:[0-9]+)?$" CORS_ORIGIN=$0
#     Header set Access-Control-Allow-Origin "%{CORS_ORIGIN}e" env=CORS_ORIGIN
#     Header set Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS"
#     Header set Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With"
#     Header set Access-Control-Allow-Credentials "true"
#     Header set Access-Control-Max-Age "3600"

#     # Eliminar información del servidor
#     Header unset X-Powered-By
#     Header unset Server

#     # HSTS (solo en HTTPS)
#     Header set Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" env=HTTPS

#     # No cache para endpoints PHP
#     <FilesMatch "\.(php)$">
#         Header set Cache-Control "no-store, no-cache, must-revalidate, max-age=0"
#         Header set Pragma "no-cache"
#     </FilesMatch>
# </IfModule>

# ### Compresión y optimización ###
# <IfModule mod_deflate.c>
#     AddOutputFilterByType DEFLATE application/json application/javascript text/css text/html text/plain text/xml
# </IfModule>

# ### Protección avanzada con ModSecurity (si está instalado) ###
# <IfModule mod_security2.c>
#     SecRuleEngine On
#     SecRequestBodyLimit 10000000
#     SecRequestBodyNoFilesLimit 65536

#     # Bloqueo de herramientas de hacking
#     SecRule REQUEST_HEADERS:User-Agent "(nikto|sqlmap|wget|curl|nmap|scan|dirbuster|burp)" "deny,status:403,id:1000,msg:'Scanner detectado'"

#     # Bloqueo de métodos peligrosos
#     SecRule REQUEST_METHOD "^(DEBUG|TRACE|TRACK)" "deny,status:405,id:1001,msg:'Método HTTP peligroso'"

#     # Protección contra inyección SQL/XSS
#     SecRule ARGS "(union\s+select|concat\(|information_schema|table_schema|<script>)" \
#         "phase:2,deny,status:403,id:1002,msg:'Ataque detectado'"
# </IfModule>

# ### Configuraciones adicionales ###
# ServerSignature Off
# LimitRequestBody 10485760  # 10MB máximo
# Options -ExecCGI -Includes  # Deshabilitar ejecución de CGI